LC: 1005 1710 881 
781 452 435 646
Fractional Knapsack:
class Result
{
  static double fractionalKnapsack(int val[], int weight[], int n, int capacity)
  {
      double[][] ratioIndex=new double[n][2];
      for(int i=0;i<n;i++)
      {
          ratioIndex[i][0]=(double) val[i]/weight[i];
          ratioIndex[i][1]=i;
      }
      Arrays.sort(ratioIndex,(a,b)->Double.compare(b[0],a[0]));
      double maxVal=0.0;
      for(int i=0;i<n;i++)
      {
          int idx=(int)ratioIndex[i][1];
          if(weight[idx]<=capacity)
          {
              maxVal+=val[idx];
              capacity-=weight[idx];
          }
          else
          {
              maxVal+=ratioIndex[i][0]*capacity;
              break;
          }
      }
      return maxVal;
  }
}